<?php

/**
 * ProductTypeTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductTypeTable extends PluginProductTypeTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object ProductTypeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ProductType');
    }

    /**
     * Check if given slug does not already exist in the database.
     *
     * @param string $slug The slug.
     * @param int $id The identifier of the object if it already exists in the database.
     *
     * @return boolean TRUE if the slug exists, FALSE otherwise.
     */
    public function checkSlug($slug, $id=null)
    {
		$qa_generic = sfConfig::get("app_table_qa_core");

		$query = "SELECT pt.id FROM ".$qa_generic.".product_type pt WHERE pt.name_slug = '".$slug."'";
		if(!is_null($id))
			$query .= " AND pt.id != '".$id."'";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->rowCount();

		if($result > 0)
			return true;

		return false;
    }

    /**
     * Get basic informations of available products for given project group.
     *
     * @param int $projectGroupId The project group identifier.
     *
     * @return array An associative array with identifiers and names of the products.
     */
	public function getBasicProducts($projectGroupId = null)
	{
		$qa_core = sfConfig::get("app_table_qa_core");
		$qa_generic = sfConfig::get("app_table_qa_generic");

		$query = "SELECT pt.id, pt.name, pt.name_slug
			FROM ".$qa_core.".product_type pt
				JOIN ".$qa_generic.".project_to_product ptp ON ptp.product_id = pt.id";
		if($projectGroupId != null)
			$query .= " WHERE ptp.project_group_id = ".$projectGroupId."";
		$query .= " GROUP BY pt.id
			ORDER BY pt.name ASC";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->fetchAll(PDO::FETCH_ASSOC);

		return $result;
	}

	/**
	 * Get basic informations about every existing products.
	 *
	 * @return array An associative array with identifiers and names of the products.
	 */
	public function getAllBasicProducts()
	{
		$qa_core = sfConfig::get("app_table_qa_core");

		$query = "SELECT pt.id, pt.name, pt.name_slug
			FROM ".$qa_core.".product_type pt
			GROUP BY pt.id
			ORDER BY pt.name ASC";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->fetchAll(PDO::FETCH_ASSOC);

		return $result;
	}

	/**
	 * Get basic informations of product identified by given slug.
	 *
	 * @param string $slug The slug.
	 *
     * @return array An associative array with identifier and name of the product, or NULL.
	 */
	public function getBasicProductBySlug($slug)
	{
		$qa_core = sfConfig::get("app_table_qa_core");

		$query = "SELECT pt.id, pt.name, pt.name_slug
			FROM ".$qa_core.".product_type pt
			WHERE pt.name_slug = '".$slug."'";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->fetch(PDO::FETCH_ASSOC);

		if(!empty($result))
			return $result;

		return null;
	}

	/**
	 * Get basic informations of a given product.
	 *
	 * @param int $id The product identifier.
	 *
	 * @return array An associative array with informations of the product, or NULL.
	 */
	public function getBasicProductById($id)
	{
		$qa_core = sfConfig::get("app_table_qa_core");

		$query = "SELECT pt.id, pt.name, pt.name_slug
			FROM ".$qa_core.".product_type pt
			WHERE pt.id = ".$id."";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->fetch(PDO::FETCH_ASSOC);

		if(!empty($result))
			return $result;

		return null;
	}

	/**
	 * Get the slug of a given product.
	 *
	 * @param int $id The product identifier.
	 *
	 * @return string The slug of the product.
	 */
	public function getSlugById($id)
	{
		$qa_core = sfConfig::get("app_table_qa_core");

		$query = "SELECT pt.name_slug
			FROM ".$qa_core.".product_type pt
			WHERE pt.id = ".$id."";
		$result = Doctrine_Manager::getInstance()->getCurrentConnection()->execute($query)->fetch(PDO::FETCH_ASSOC);

		if(!empty($result))
			return $result["name_slug"];

		return null;
	}








    /**
     * @deprecated
     * @param unknown $projectGroupId
     * @return multitype:unknown
     */
    public function getNames($projectGroupId)
    {
		$qa_core = sfConfig::get("app_table_qa_core");
		$qa_generic = sfConfig::get("app_table_qa_generic");

    	$query = Doctrine_Manager::getInstance()->getCurrentConnection();
    	$result = $query->execute("
			SELECT DISTINCT pt.id, pt.name
				FROM ".$qa_core.".product_type pt
				JOIN ".$qa_generic.".project_to_product ptp ON ptp.product_id = pt.id
				WHERE ptp.project_group_id = ".$projectGroupId."
				ORDER BY pt.name ASC
		");
    	$array = $result->fetchAll();

    	$products = array();
    	foreach($array as $row)
    	{
    		$products[$row["id"]] = $row["name"];
    	}

    	return $products;
    }

    /**
     * @deprecated
     * Get a product by its slug name.
     *
     * @param slug The slugified name.
     *
     * @return The first item of the collection.
     */
    public function getProductTypeBySlug($slug)
    {
    	$query = Doctrine_Core::getTable("ProductType")
	    	->createQuery("pt")
	    	->where("LOWER(REPLACE(REPLACE(REPLACE(pt.name, '.', '-'), ' ' , '-'), '_' , '-')) = ?", $slug);

    	return $query->fetchOne();
    }
}