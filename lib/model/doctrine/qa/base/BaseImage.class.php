<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Image', 'qa_generic');

/**
 * BaseImage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property string $os
 * @property string $distribution
 * @property string $version
 * @property string $kernel
 * @property string $architecture
 * @property text $other_fw
 * @property string $binary_link
 * @property string $source_link
 * @property string $name_slug
 * @property Doctrine_Collection $Images
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method string              getName()         Returns the current record's "name" value
 * @method text                getDescription()  Returns the current record's "description" value
 * @method string              getOs()           Returns the current record's "os" value
 * @method string              getDistribution() Returns the current record's "distribution" value
 * @method string              getVersion()      Returns the current record's "version" value
 * @method string              getKernel()       Returns the current record's "kernel" value
 * @method string              getArchitecture() Returns the current record's "architecture" value
 * @method text                getOtherFw()      Returns the current record's "other_fw" value
 * @method string              getBinaryLink()   Returns the current record's "binary_link" value
 * @method string              getSourceLink()   Returns the current record's "source_link" value
 * @method string              getNameSlug()     Returns the current record's "name_slug" value
 * @method Doctrine_Collection getImages()       Returns the current record's "Images" collection
 * @method Image               setId()           Sets the current record's "id" value
 * @method Image               setName()         Sets the current record's "name" value
 * @method Image               setDescription()  Sets the current record's "description" value
 * @method Image               setOs()           Sets the current record's "os" value
 * @method Image               setDistribution() Sets the current record's "distribution" value
 * @method Image               setVersion()      Sets the current record's "version" value
 * @method Image               setKernel()       Sets the current record's "kernel" value
 * @method Image               setArchitecture() Sets the current record's "architecture" value
 * @method Image               setOtherFw()      Sets the current record's "other_fw" value
 * @method Image               setBinaryLink()   Sets the current record's "binary_link" value
 * @method Image               setSourceLink()   Sets the current record's "source_link" value
 * @method Image               setNameSlug()     Sets the current record's "name_slug" value
 * @method Image               setImages()       Sets the current record's "Images" collection
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseImage extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('image');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('os', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('distribution', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('version', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('kernel', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('architecture', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('other_fw', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('binary_link', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('source_link', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name_slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));

        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Configuration as Images', array(
             'local' => 'id',
             'foreign' => 'image_id'));
    }
}