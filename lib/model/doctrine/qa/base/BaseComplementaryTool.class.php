<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ComplementaryTool', 'qa_core');

/**
 * BaseComplementaryTool
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $version
 * @property text $description
 * @property string $entry_link
 * 
 * @method integer           getId()          Returns the current record's "id" value
 * @method string            getName()        Returns the current record's "name" value
 * @method string            getVersion()     Returns the current record's "version" value
 * @method text              getDescription() Returns the current record's "description" value
 * @method string            getEntryLink()   Returns the current record's "entry_link" value
 * @method ComplementaryTool setId()          Sets the current record's "id" value
 * @method ComplementaryTool setName()        Sets the current record's "name" value
 * @method ComplementaryTool setVersion()     Sets the current record's "version" value
 * @method ComplementaryTool setDescription() Sets the current record's "description" value
 * @method ComplementaryTool setEntryLink()   Sets the current record's "entry_link" value
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComplementaryTool extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('complementary_tool');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('version', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('entry_link', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));

        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}