<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TableName', 'qa_generic');

/**
 * BaseTableName
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $TableNames
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method Doctrine_Collection getTableNames() Returns the current record's "TableNames" collection
 * @method TableName           setId()         Sets the current record's "id" value
 * @method TableName           setName()       Sets the current record's "name" value
 * @method TableName           setTableNames() Sets the current record's "TableNames" collection
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTableName extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('table_name');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 128,
             ));


        $this->index('idx_table_name_name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ComplementaryToolRelation as TableNames', array(
             'local' => 'id',
             'foreign' => 'table_name_id'));
    }
}