<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TestResult', 'qa_generic');

/**
 * BaseTestResult
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $complement
 * @property integer $test_session_id
 * @property integer $decision_criteria_id
 * @property text $comment
 * @property timestamp $started_at
 * @property integer $execution_time
 * @property integer $status
 * @property text $bugs
 * @property TestSession $TestSession
 * @property Doctrine_Collection $TestResults
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method string              getName()                 Returns the current record's "name" value
 * @method string              getComplement()           Returns the current record's "complement" value
 * @method integer             getTestSessionId()        Returns the current record's "test_session_id" value
 * @method integer             getDecisionCriteriaId()   Returns the current record's "decision_criteria_id" value
 * @method text                getComment()              Returns the current record's "comment" value
 * @method timestamp           getStartedAt()            Returns the current record's "started_at" value
 * @method integer             getExecutionTime()        Returns the current record's "execution_time" value
 * @method integer             getStatus()               Returns the current record's "status" value
 * @method text                getBugs()                 Returns the current record's "bugs" value
 * @method TestSession         getTestSession()          Returns the current record's "TestSession" value
 * @method Doctrine_Collection getTestResults()          Returns the current record's "TestResults" collection
 * @method TestResult          setId()                   Sets the current record's "id" value
 * @method TestResult          setName()                 Sets the current record's "name" value
 * @method TestResult          setComplement()           Sets the current record's "complement" value
 * @method TestResult          setTestSessionId()        Sets the current record's "test_session_id" value
 * @method TestResult          setDecisionCriteriaId()   Sets the current record's "decision_criteria_id" value
 * @method TestResult          setComment()              Sets the current record's "comment" value
 * @method TestResult          setStartedAt()            Sets the current record's "started_at" value
 * @method TestResult          setExecutionTime()        Sets the current record's "execution_time" value
 * @method TestResult          setStatus()               Sets the current record's "status" value
 * @method TestResult          setBugs()                 Sets the current record's "bugs" value
 * @method TestResult          setTestSession()          Sets the current record's "TestSession" value
 * @method TestResult          setTestResults()          Sets the current record's "TestResults" collection
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTestResult extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('test_result');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('complement', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('test_session_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('decision_criteria_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('comment', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('started_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('execution_time', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('bugs', 'text', null, array(
             'type' => 'text',
             ));


        $this->index('fk_test_result_test_session1', array(
             'fields' => 
             array(
              0 => 'test_session_id',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TestSession', array(
             'local' => 'test_session_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'no action'));

        $this->hasMany('Measure as TestResults', array(
             'local' => 'id',
             'foreign' => 'test_result_id'));
    }
}