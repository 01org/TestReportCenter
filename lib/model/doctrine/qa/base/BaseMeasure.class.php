<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Measure', 'qa_generic');

/**
 * BaseMeasure
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $test_result_id
 * @property string $value
 * @property string $unit
 * @property text $description
 * @property integer $category
 * @property integer $operator
 * @property integer $measure_id
 * @property TestResult $TestResult
 * @property Measure $Measure
 * @property Doctrine_Collection $Measures
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getTestResultId()   Returns the current record's "test_result_id" value
 * @method string              getValue()          Returns the current record's "value" value
 * @method string              getUnit()           Returns the current record's "unit" value
 * @method text                getDescription()    Returns the current record's "description" value
 * @method integer             getCategory()       Returns the current record's "category" value
 * @method integer             getOperator()       Returns the current record's "operator" value
 * @method integer             getMeasureId()      Returns the current record's "measure_id" value
 * @method TestResult          getTestResult()     Returns the current record's "TestResult" value
 * @method Measure             getMeasure()        Returns the current record's "Measure" value
 * @method Doctrine_Collection getMeasures()       Returns the current record's "Measures" collection
 * @method Measure             setId()             Sets the current record's "id" value
 * @method Measure             setTestResultId()   Sets the current record's "test_result_id" value
 * @method Measure             setValue()          Sets the current record's "value" value
 * @method Measure             setUnit()           Sets the current record's "unit" value
 * @method Measure             setDescription()    Sets the current record's "description" value
 * @method Measure             setCategory()       Sets the current record's "category" value
 * @method Measure             setOperator()       Sets the current record's "operator" value
 * @method Measure             setMeasureId()      Sets the current record's "measure_id" value
 * @method Measure             setTestResult()     Sets the current record's "TestResult" value
 * @method Measure             setMeasure()        Sets the current record's "Measure" value
 * @method Measure             setMeasures()       Sets the current record's "Measures" collection
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMeasure extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('measure');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('test_result_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('value', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('unit', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 45,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('category', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('operator', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('measure_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));


        $this->index('fk_measure_test_result', array(
             'fields' => 
             array(
              0 => 'test_result_id',
             ),
             ));
        $this->index('fk_measure_measure', array(
             'fields' => 
             array(
              0 => 'measure_id',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TestResult', array(
             'local' => 'test_result_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'no action'));

        $this->hasOne('Measure', array(
             'local' => 'measure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'no action'));

        $this->hasMany('Measure as Measures', array(
             'local' => 'id',
             'foreign' => 'measure_id'));
    }
}