<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TestSession', 'qa_generic');

/**
 * BaseTestSession
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $build_id
 * @property string $testset
 * @property string $name
 * @property text $test_objective
 * @property text $qa_summary
 * @property integer $user_id
 * @property timestamp $created_at
 * @property integer $editor_id
 * @property timestamp $updated_at
 * @property string $project_release
 * @property integer $project_milestone
 * @property text $issue_summary
 * @property integer $status
 * @property integer $published
 * @property integer $configuration_id
 * @property string $campaign_checksum
 * @property string $build_slug
 * @property string $testset_slug
 * @property text $notes
 * @property Configuration $Configuration
 * @property Doctrine_Collection $TestSessions
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getBuildId()           Returns the current record's "build_id" value
 * @method string              getTestset()           Returns the current record's "testset" value
 * @method string              getName()              Returns the current record's "name" value
 * @method text                getTestObjective()     Returns the current record's "test_objective" value
 * @method text                getQaSummary()         Returns the current record's "qa_summary" value
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method timestamp           getCreatedAt()         Returns the current record's "created_at" value
 * @method integer             getEditorId()          Returns the current record's "editor_id" value
 * @method timestamp           getUpdatedAt()         Returns the current record's "updated_at" value
 * @method string              getProjectRelease()    Returns the current record's "project_release" value
 * @method integer             getProjectMilestone()  Returns the current record's "project_milestone" value
 * @method text                getIssueSummary()      Returns the current record's "issue_summary" value
 * @method integer             getStatus()            Returns the current record's "status" value
 * @method integer             getPublished()         Returns the current record's "published" value
 * @method integer             getConfigurationId()   Returns the current record's "configuration_id" value
 * @method string              getCampaignChecksum()  Returns the current record's "campaign_checksum" value
 * @method string              getBuildSlug()         Returns the current record's "build_slug" value
 * @method string              getTestsetSlug()       Returns the current record's "testset_slug" value
 * @method text                getNotes()             Returns the current record's "notes" value
 * @method Configuration       getConfiguration()     Returns the current record's "Configuration" value
 * @method Doctrine_Collection getTestSessions()      Returns the current record's "TestSessions" collection
 * @method TestSession         setId()                Sets the current record's "id" value
 * @method TestSession         setBuildId()           Sets the current record's "build_id" value
 * @method TestSession         setTestset()           Sets the current record's "testset" value
 * @method TestSession         setName()              Sets the current record's "name" value
 * @method TestSession         setTestObjective()     Sets the current record's "test_objective" value
 * @method TestSession         setQaSummary()         Sets the current record's "qa_summary" value
 * @method TestSession         setUserId()            Sets the current record's "user_id" value
 * @method TestSession         setCreatedAt()         Sets the current record's "created_at" value
 * @method TestSession         setEditorId()          Sets the current record's "editor_id" value
 * @method TestSession         setUpdatedAt()         Sets the current record's "updated_at" value
 * @method TestSession         setProjectRelease()    Sets the current record's "project_release" value
 * @method TestSession         setProjectMilestone()  Sets the current record's "project_milestone" value
 * @method TestSession         setIssueSummary()      Sets the current record's "issue_summary" value
 * @method TestSession         setStatus()            Sets the current record's "status" value
 * @method TestSession         setPublished()         Sets the current record's "published" value
 * @method TestSession         setConfigurationId()   Sets the current record's "configuration_id" value
 * @method TestSession         setCampaignChecksum()  Sets the current record's "campaign_checksum" value
 * @method TestSession         setBuildSlug()         Sets the current record's "build_slug" value
 * @method TestSession         setTestsetSlug()       Sets the current record's "testset_slug" value
 * @method TestSession         setNotes()             Sets the current record's "notes" value
 * @method TestSession         setConfiguration()     Sets the current record's "Configuration" value
 * @method TestSession         setTestSessions()      Sets the current record's "TestSessions" collection
 * 
 * @package    trc
 * @subpackage model
 * @author     Julian Dumez <julianx.dumez@intel.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTestSession extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('test_session');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('build_id', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('testset', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('test_objective', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('qa_summary', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('editor_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('project_release', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             ));
        $this->hasColumn('project_milestone', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('issue_summary', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('published', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('configuration_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('campaign_checksum', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('build_slug', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('testset_slug', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('notes', 'text', null, array(
             'type' => 'text',
             ));


        $this->index('fk_test_session_configuration1', array(
             'fields' => 
             array(
              0 => 'configuration_id',
             ),
             ));
        $this->index('idx_build_id', array(
             'fields' => 
             array(
              0 => 'build_id',
             ),
             ));
        $this->index('idx_testset', array(
             'fields' =>
             array(
              0 => 'testset',
             ),
             ));
        $this->index('idx_campaign_checksum', array(
             'fields' => 
             array(
              0 => 'campaign_checksum',
             ),
             ));
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Configuration', array(
             'local' => 'configuration_id',
             'foreign' => 'id',
             'onDelete' => 'no action',
             'onUpdate' => 'no action'));

        $this->hasMany('TestResult as TestSessions', array(
             'local' => 'id',
             'foreign' => 'test_session_id'));
    }
}